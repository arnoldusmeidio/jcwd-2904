// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int      @id @default(autoincrement())
  email          String   @unique
  emailConfirmed Boolean  @default(false)
  name           String?  @default("John Doe")
  password       String
  posts          Post[]
  role           Role     @relation(fields: [roleId], references: [id])
  token          Token?
  roleId         Int
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@map("users")
}

model Token {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  used      Boolean  @default(false)
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("tokens")
}

model Post {
  id        Int            @id @default(autoincrement())
  title     String
  content   String
  imageUrl  String?
  published Boolean        @default(false)
  author    User           @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId  Int
  statistic PostStatistic?
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt

  @@map("posts")
}

model PostStatistic {
  id         Int      @id @default(autoincrement())
  post       Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId     Int      @unique
  viewCount  Int      @default(0)
  likeCount  Int      @default(0)
  shareCount Int      @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("posts_statistic")
}

model Role {
  id        Int      @id @default(autoincrement())
  user      User[]
  position  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("roles")
}
