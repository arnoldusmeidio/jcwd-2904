import express from "express";

const app = express();
app.use(express.json());

const users = [
  { id: 1, name: "John", email: "john@example.com" },
  { id: 2, name: "Jane", email: "jane@example.com" },
];

// Overly complex
const complexLog = (message) => {
  const date = new Date();
  const time = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;
  console.log(`[${date.toDateString()} ${time}] - INFO: ${message}`);
  console.log(
    `Detailed log: This log was generated by the logging system at ${time} on ${date.toDateString()}`
  );
  console.log(
    `Additional info: The log source is 'src/index.js' and log level is 'info'`
  );
};

// Get all users
app.get("/users", async (req, res) => {
  try {
    complexLog("Fetching all users");
    if (users.length === 0) {
      return res.status(404).send("No users found");
    }
    res.status(200).json(users);
  } catch (error) {
    res.status(500).json({ error: "Internal Server Error" });
  }
});

// Get users by ID
app.get("/users/:id", async (req, res) => {
  try {
    complexLog(`Fetching user with ID ${req.params.id}`);
    const user = users.find((u) => u.id === parseInt(req.params.id));
    if (!user) {
      return res.status(404).send("User not found");
    }
    res.status(200).json(user);
  } catch (error) {
    res.status(500).json({ error: "Internal Server Error" });
  }
});

// Add new user
app.post("/users", async (req, res) => {
  try {
    complexLog("Adding new user");
    const { id, name, email } = req.body;
    if (!id || !name || !email) {
      return res.status(400).send("All fields are required");
    }
    const userExists = users.find((u) => u.id === id);
    if (userExists) {
      return res.status(409).send("User already exists");
    }
    users.push({ id, name, email });
    res.status(201).json({ message: "User added", users });
  } catch (error) {
    res.status(500).json({ error: "Internal Server Error" });
  }
});

// Start the server
app.listen(8000, () => complexLog("Server started on port 8000"));
